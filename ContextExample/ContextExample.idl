// File ContextExample.idl
//import "oaidl.idl";
[
   // A unique identifier that distinguishes this interface from other interfaces.
   uuid(00000003-EAF3-4A7A-A0F2-BCE4C30DA77E),

   // This is version 1.0 of this interface.
   version(1.0)
]



interface ContextExample // The interface is named ContextExample
{
    cpp_quote("#include \"minwinbase.h\" ")
   // To fully use context handles we need to do a typedef.
   typedef [context_handle] void* CONTEXT_HANDLE;

   cpp_quote("#ifdef __midl")
   typedef [helpstring ("64 bit large integer")] struct _FILETIME {
       long dwLowDateTime;
       long dwHighDateTime;
   } FILETIME;

   typedef [helpstring ("64 bit  integer")]unsigned long DWORD;
   
   typedef [helpstring("WIN32_FIND_DATA structure")] struct {
       DWORD dwFileAttributes;
       FILETIME ftCreationTime;
       FILETIME ftLastAccessTime;
       FILETIME ftLastWriteTime;
       DWORD nFileSizeHigh;
       DWORD nFileSizeLow;
       DWORD dwReserved0;
       DWORD dwReserved1;
       unsigned char   cFileName[256];
       unsigned char   cAlternateFileName[256];
   } WIN32_FIND_DATA;
   cpp_quote("#endif")
   // Open a context on the server.
   CONTEXT_HANDLE Open(
      // Explicit server binding handle.
      [in] handle_t hBinding,
      // String to be output on the server.
      [in, string] const char* szString);

   // Output the context string on the server.
   void Output(
      // Context handle. The binding handle is implicitly
      // used through the explicit context handle.
      [in] CONTEXT_HANDLE hContext);

   int CreateNewFile([in] CONTEXT_HANDLE hContext,
       [in, optional,string, defaultvalue (".\Test.txt")] const char* filePath,
       [in, optional, string, defaultvalue ("__TIMESTAMP__")] const char* Text);

   int CopyPaste([in] CONTEXT_HANDLE hContext,
       [in, string] const char* sourcePath,
       [in, string] const char* destinationPath
   );

   int DeleteFileOnPath(
       [in] CONTEXT_HANDLE hContext,
       [in,string]const char* Path);

   int getFileInformation(
       [in] CONTEXT_HANDLE hContext,
       [in, string] const char* Path,
       [in, out] WIN32_FIND_DATA* metaData);


   // Closes a context on the server.
   void Close(
      // Context handle. The binding handle is implicitly
      // used through the explicit context handle.
      [in, out] CONTEXT_HANDLE* phContext);
}
